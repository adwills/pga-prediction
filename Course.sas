LIBNAME GOLF "/Local_Files/OneDrive - SAS/Projects/Golf/Data";
%INC "/Local_Files/OneDrive - SAS/Projects/Golf/Programs/TRYLOCK.sas";
%INC "/Local_Files/OneDrive - SAS/Projects/Golf/Programs/FILEECHO.sas";

/*OBTAIN TOURNAMENT AND COURSE LIST FOR SEASON*/
/* FILENAME SCHED TEMP; */
/*  */
/* PROC HTTP  */
/* 	URL="https://statdata.pgatour.com/r/current/schedule-v2.json" */
/* 	METHOD= "GET" */
/* 	OUT=SCHED; */
/* RUN; */
/*  */
/* LIBNAME SCHED JSON FILEREF=SCHED; */
/*  */
/* PROC SQL; */
/* 	CREATE TABLE GOLF.TOURNAMENTS2020 AS  */
/* 	SELECT A.*, B.ORDINAL_COURSES, B.HOST, B.NUMBER, B.RANK, B.COURSENAME, C.OFFICIAL AS NAME, C.SHORT AS NAME_SHORT */
/* 	FROM SCHED.TOURS_TRNS(DROP=TIMEZONE PRESBY SCHWABCUP PRIMARYEVENT2) A */
/* 		LEFT JOIN SCHED.TRNS_COURSES B */
/* 			ON A.ORDINAL_TRNS=B.ORDINAL_TRNS */
/* 		LEFT JOIN SCHED.TRNS_TRNNAME C */
/* 			ON A.ORDINAL_TRNS=C.ORDINAL_TRNS */
/* 	WHERE A.ORDINAL_TOURS=7; */
/* QUIT; */

/*************************GET CURRENT TOURNAMENT ID VALUE FROM HTML AND ASSIGN TO MACRO VARIABLE*************************/

/* ASSIGN YEAR */
%LET YEAR = 2021;

FILENAME TOURNEY TEMP;

PROC HTTP 
	URL="http://www.pgatour.com/leaderboard.html"
	METHOD= "GET"
	OUT=TOURNEY;
RUN;

/*%FILEECHO(TOURNEY);*/

DATA _NULL_;
	INFILE TOURNEY LENGTH=L;
	INPUT @1 LINE $VARYING32767. L;
	IF INDEX(UPCASE(LINE),"PERMNUM") > 0 THEN DO;
		CALL SYMPUTX('TOURNID',COMPRESS(SCAN(LINE,2),"'"));
	END;
RUN;

%PUT TOURNID=&TOURNID;

/**********************COURSE INFORMATION*************************/

/* MANUAL OVERRIDE OF TOURNAMENT */
%LET TOURNID = 016;

FILENAME COURSE TEMP;

PROC HTTP 
	URL="https://statdata.pgatour.com/r/&TOURNID/coursestat.json"
	METHOD= "GET"
	OUT=COURSE;
RUN;

LIBNAME COURSE JSON FILEREF=COURSE;

PROC SQL;
	CREATE TABLE HOLES AS
	SELECT A.ORDINAL_HOLES, A.HOLENUM, INPUT(A.PAR,1.) AS PAR, INPUT(A.YARDS,3.) AS YARDS, INPUT(B.EV2, 5.3) AS SCORE_AVG
	FROM COURSE.COURSES_HOLES A
		LEFT JOIN
		COURSE.HOLES_STATS B
		ON A.ORDINAL_HOLES = B.ORDINAL_HOLES
	WHERE A.ORDINAL_COURSES=1 AND B.ID="43108";
QUIT;

PROC SQL;
	CREATE TABLE COURSE_STATS AS
	SELECT PAR, MIN(YARDS) AS YARDS_MIN, MEAN(YARDS) AS YARDS_AVG, MAX(YARDS) AS YARDS_MAX,
		MIN(SCORE_AVG) AS SCORE_MIN, MEAN(SCORE_AVG) AS SCORE_AVG, MAX(SCORE_AVG) AS SCORE_MAX
	FROM HOLES
	GROUP BY 1
	ORDER BY 1;
QUIT;

PROC SQL;
	CREATE TABLE GOLF.COURSE_&TOURNID._&YEAR AS
	SELECT SUM(A.PAR) AS PAR, SUM(A.YARDS) AS DISTANCE, 
	&TOURNID AS TOURNID FORMAT=Z3., &YEAR AS YEAR, INPUT(B.COURSEID,3.) AS COURSEID,
	C.*, D.*, E.*
	FROM HOLES A, COURSE.COURSES B,
		(SELECT YARDS_MIN AS YARDS_MIN3, YARDS_AVG AS YARDS_AVG3, YARDS_MAX AS YARDS_MAX3,
			SCORE_MIN AS SCORE_MIN3, SCORE_AVG AS SCORE_AVG3, SCORE_MAX AS SCORE_MAX3
			FROM COURSE_STATS WHERE PAR=3) C,
		(SELECT YARDS_MIN AS YARDS_MIN4, YARDS_AVG AS YARDS_AVG4, YARDS_MAX AS YARDS_MAX4,
			SCORE_MIN AS SCORE_MIN4, SCORE_AVG AS SCORE_AVG4, SCORE_MAX AS SCORE_MAX4
			FROM COURSE_STATS WHERE PAR=4) D,
		(SELECT YARDS_MIN AS YARDS_MIN5, YARDS_AVG AS YARDS_AVG5, YARDS_MAX AS YARDS_MAX5,
			SCORE_MIN AS SCORE_MIN5, SCORE_AVG AS SCORE_AVG5, SCORE_MAX AS SCORE_MAX5
			FROM COURSE_STATS WHERE PAR=5) E
	WHERE B.HOST=1
	GROUP BY 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23;
QUIT;
