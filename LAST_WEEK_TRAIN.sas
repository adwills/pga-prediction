LIBNAME GOLF "C:\Users\anddwi\Andrew\Projects\Golf\Data";
%INC "C:\Users\anddwi\Andrew\Projects\Golf\Programs\TRYLOCK.sas";
%INC "C:\Users\anddwi\Andrew\Projects\Golf\Programs\FILEECHO.sas";

/* ASSIGN YEAR */
%LET YEAR = 2020;

/*************************GET CURRENT TOURNAMENT ID VALUE FROM HTML AND ASSIGN TO MACRO VARIABLE*************************/
/*CHECK TO SEE IF THE LEADERBOARD HAS REFRESHED TO THE NEW TOURNAMENT*/
/*MUST USE MANUAL OVERRIDE IF THAT'S THE CASE*/
FILENAME TOURNEY TEMP;

PROC HTTP 
	URL="http://www.pgatour.com/leaderboard.html"
	METHOD= "GET"
	OUT=TOURNEY;
RUN;

/* %FILEECHO(TOURNEY); */

DATA _NULL_;
	INFILE TOURNEY LENGTH=L;
	INPUT @1 LINE $VARYING32767. L;
	IF INDEX(UPCASE(LINE),"PERMNUM") > 0 THEN DO;
		CALL SYMPUTX('TOURNID',COMPRESS(SCAN(LINE,2),"'"));
	END;
RUN;

/*%PUT TOURNID=&TOURNID;*/

/*************************FIND FINAL POSITION FOR EACH PLAYER IN THE FIELD*************************/
FILENAME FINISH TEMP;

/* MANUAL OVERRIDE OF TOURNAMENT */
/* %LET TOURNID = 528; */

%PUT &TOURNID;

PROC HTTP 
	URL="https://statdata.pgatour.com/r/&TOURNID/&YEAR/leaderboard-v2.json"
	METHOD= "GET"
	OUT=FINISH;
RUN;

/* %FILEECHO(FIELD); */

LIBNAME FINISH JSON FILEREF=FINISH;

PROC SQL;
	CREATE TABLE GOLF.FINISH_&TOURNID._&YEAR AS
	SELECT A.*, INPUT(TRANWRD(B.CURRENT_POSITION,"T",""),3.) AS FINISH, B.STATUS /*, &TOURNID AS TOURNID FORMAT=Z3., &YEAR AS YEAR*/
	FROM GOLF.FIELD_&TOURNID._&YEAR A
	INNER JOIN FINISH.LEADERBOARD_PLAYERS B
	ON A.PID=B.PLAYER_ID;
QUIT;

/*************************RANGE STANDARDIZE FINISH*************************/
/* %LET TOURNID = 007; */
PROC STDIZE DATA=GOLF.FINISH_&TOURNID._&YEAR METHOD=RANGE OUT=FINISH_STD;
	VAR FINISH;
RUN;

/* PROC STDIZE DATA=GOLF.PGA_TRAINING METHOD=RANGE OUT=PGA_TRAINING_STD (KEEP=PID YEAR TOURNID FINISH); */
/* 	VAR FINISH; */
/* 	BY YEAR TOURNID; */
/* RUN; */
/*  */
/* PROC SQL; */
/* 	CREATE TABLE TRAIN_NEW AS */
/* 	SELECT A.*, B.FINISH AS FINISH_STD */
/* 	FROM GOLF.PGA_TRAINING A */
/* 	INNER JOIN PGA_TRAINING_STD B */
/* 	ON A.YEAR=B.YEAR */
/* 	AND A.TOURNID=B.TOURNID */
/* 	AND A.PID=B.PID; */
/* QUIT; */
/*  */
/* DATA TRAIN_NEW; */
/* 	SET TRAIN_NEW; */
/* 	RENAME FINISH=FINISH_INT; */
/* 	RENAME FINISH_STD=FINISH; */
/* RUN; */
/*  */
/* DATA GOLF.PGA_TRAINING; */
/* 	SET TRAIN_NEW; */
/* RUN; */

/*************************ADD FINISH INFORMATION TO STATS FOR TRAINING DATA*************************/
PROC SQL;
	CREATE TABLE GOLF.STATS_&TOURNID._&YEAR._TRAIN AS
	SELECT A.*, B.FINISH AS FINISH_INT, C.FINISH,
		CASE WHEN UPCASE(B.STATUS)="ACTIVE" THEN 1
			WHEN UPCASE(B.STATUS)="CUT" THEN 0
		ELSE . END AS MADE_CUT
	FROM GOLF.STATS_&TOURNID._&YEAR._SCORE A
	INNER JOIN GOLF.FINISH_&TOURNID._&YEAR B
	ON A.PID=INPUT(B.PID,10.)
	INNER JOIN FINISH_STD C
	ON A.PID=INPUT(C.PID,10.);
QUIT;

/* PROC SQL; */
/* 	CREATE TABLE GOLF.STATS_&TOURNID._&YEAR._TRAIN AS */
/* 	SELECT A.*, B.FINISH, */
/* 		CASE WHEN UPCASE(B.STATUS)="ACTIVE" THEN 1 */
/* 			WHEN UPCASE(B.STATUS)="CUT" THEN 0 */
/* 		ELSE . END AS MADE_CUT */
/* 	FROM GOLF.STATS_&TOURNID._&YEAR._SCORE A */
/* 	INNER JOIN GOLF.FINISH_&TOURNID._&YEAR B */
/* 	ON A.PID=INPUT(B.PID,10.); */
/* QUIT; */

/*************************APPEND LABELED DATA FROM THE WEEK TO LARGER TRAINING DATA SET*************************/
DATA GOLF.PGA_TRAINING;
	SET GOLF.PGA_TRAINING GOLF.STATS_&TOURNID._&YEAR._TRAIN;
RUN;

PROC SORT DATA=GOLF.PGA_TRAINING NODUP;
	BY YEAR TOURNID FINISH_INT FINISH PID;
RUN;
